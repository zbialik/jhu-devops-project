---
- name: Check if gitlab_runner_registration_token is defined
  assert:
    that:
      - gitlab_runner_registration_token is defined
    fail_msg: "'gitlab_runner_registration_token' is not defined but is required."
    success_msg: "'gitlab_runner_registration_token' is defined."

- name: Import GitLab's official GPG key
  ansible.builtin.apt_key:
    url: https://packages.gitlab.com/gpg.key
    state: present

- name: Add GitLab Runner repository
  ansible.builtin.apt_repository:
    repo: 'deb https://packages.gitlab.com/runner/gitlab-runner/ubuntu/ {{ ansible_distribution_release }} main'
    state: present
    update_cache: yes

- name: Install GitLab Runner
  ansible.builtin.apt:
    name: gitlab-runner
    state: latest
    update_cache: yes

- name: Ensure a directory exists
  ansible.builtin.file:
    path: /var/local/gitlab-runner
    state: directory
    mode: '0755'

- name: Get the public IP address
  ansible.builtin.shell: |
    TOKEN=$(curl -s -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600") && curl -s -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4
  register: public_ip_output
  changed_when: false

- name: Generate gitlab-runner config.toml
  ansible.builtin.template:
    src: config.template.toml.j2
    dest: /var/local/gitlab-runner/config.template.toml
    owner: root
    group: root
    mode: '0644'
  vars:
    public_ip: "{{ public_ip_output.stdout }}"

- name: Unregister any gitlab runners
  ansible.builtin.shell:
    cmd: gitlab-runner unregister --all-runners
  args:
    executable: /bin/bash

- name: Register GitLab Runner
  ansible.builtin.shell:
    cmd: gitlab-runner register --non-interactive --template-config /var/local/gitlab-runner/config.template.toml --registration-token {{ gitlab_runner_registration_token }}
  args:
    executable: /bin/bash

- name: Restart GitLab Runner
  ansible.builtin.shell:
    cmd: gitlab-runner restart
  args:
    executable: /bin/bash
